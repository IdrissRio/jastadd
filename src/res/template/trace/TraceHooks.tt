# Copyright (c) 2013, The JastAdd Team
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Lund University nor the names of its
#       contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

ASTNode.emitNodeToStringMethod = [[
$if (TracingEnabled)
public static String $ASTNode.nodeToString($ASTNode node) {
  return (node != null ? node.getClass().getSimpleName() : "null");
}
$endif
]]


AttrDecl.traceHookAttrComputeBegin = [[
$if (TraceCompute)
  $if(#isParameterized)
    $if(#isCircular)
state().trace().addComputeBegin(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, "");
    $else
      $if(!#isLazy)
        $if(!VisitCheckEnabled)
          $if(#hasOneParameter)
Object _parameters = #parameters;
          $else
Object _parameters = java.util.Arrays.asList(#parameters);
          $endif
        $endif
      $endif
state().trace().addComputeBegin(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, "");
    $endif
  $else
state().trace().addComputeBegin(this, "#(hostClassName).#(signatureJavaStyle)", "", "");
  $endif
$endif
]]

AttrDecl.traceHookAttrComputeEnd = [[
$if (TraceCompute)
  $if(#isParameterized)
    $if(#isCircular)
state().trace().addComputeEnd(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
    $else
state().trace().addComputeEnd(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, #(signature)_value);
    $endif
  $else
state().trace().addComputeEnd(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
$endif
]]

AttrDecl.traceHookAttrComputeEndInline = [[
$if (TraceCompute)
  $if(#isParameterized)
state().trace().addComputeEnd(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, "");
  $else
state().trace().addComputeEnd(this, "#(hostClassName).#(signatureJavaStyle)", "", "");
  $endif
$endif
]]

AttrDecl.traceHookAttrCacheRead = [[
$if (TraceCache)
  $if(#isLazy)
    $if(#isParameterized)
      $if(#isCircular)
state().trace().addCacheRead(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, $FromRefTypeParamCircular);
      $else
state().trace().addCacheRead(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, $FromRefTypeParam);
      $endif
    $else
state().trace().addCacheRead(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
    $endif
  $endif
$endif
]]

AttrDecl.traceHookAttrCached = [[
$if (TraceCache)
  $if(#isLazy)
    $if(#isParameterized)
      $if(#isCircular)
state().trace().addCached(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
      $else
state().trace().addCached(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, #(signature)_value);
      $endif
    $else
state().trace().addCached(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
    $endif
  $endif
$endif
]]

AttrDecl.traceHookAttrCacheAbort = [[
$if (TraceCache)
  $if(#isLazy)
    $if(#isParameterized)
      $if(#isCircular)
state().trace().addCacheAbort(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
      $else
state().trace().addCacheAbort(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, #(signature)_value);
      $endif
    $else
state().trace().addCacheAbort(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
    $endif
  $endif
$endif
]]

AttrDecl.traceHookCircularEnterCase1 = [[
$if (TraceCircular)
 $if(#getNTA)
   $if(#isParameterized)
state().trace().addEnterCircularNTACase1(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addEnterCircularNTACase1(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $else
  $if(#isParameterized)
state().trace().addEnterCircularCase1(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addEnterCircularCase1(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $endif
$endif
]]

AttrDecl.traceHookCircularCase1Change = [[
$if (TraceCircular)
 $if(#getNTA)
   $if(#isParameterized)
state().trace().addCircularNTACase1Change(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, 
    _value.value + "->" + new_#(signature)_value);
  $else
state().trace().addCircularNTACase1Change(this, "#(hostClassName).#(signatureJavaStyle)", "", 
    #(signature)_value + "->" + new_#(signature)_value);
  $endif
 $else
  $if(#isParameterized)
state().trace().addCircularCase1Change(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, 
    _value.value + "->" + new_#(signature)_value);
  $else
state().trace().addCircularCase1Change(this, "#(hostClassName).#(signatureJavaStyle)", "", 
    #(signature)_value + "->" + new_#(signature)_value);
  $endif
 $endif
$endif
]]

AttrDecl.traceHookCircularExitCase1 = [[
$if (TraceCircular)
 $if(#getNTA)
  $if(#isParameterized)
state().trace().addExitCircularNTACase1(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addExitCircularNTACase1(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $else
  $if(#isParameterized)
state().trace().addExitCircularCase1(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addExitCircularCase1(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $endif
$endif
]]

AttrDecl.traceHookCircularEnterCase2 = [[
$if (TraceCircular)
 $if(#getNTA)
  $if(#isParameterized)
state().trace().addEnterCircularNTACase2(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addEnterCircularNTACase2(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $else
  $if(#isParameterized)
state().trace().addEnterCircularCase2(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addEnterCircularCase2(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $endif
$endif
]]

AttrDecl.traceHookCircularCase2Change = [[
$if (TraceCircular)
 $if(#getNTA)
  $if(#isParameterized)
state().trace().addCircularNTACase2Change(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, 
    _value.value + "->" + new_#(signature)_value);
  $else
state().trace().addCircularNTACase2Change(this, "#(hostClassName).#(signatureJavaStyle)", "", 
    #(signature)_value + "->" + new_#(signature)_value);
  $endif
 $else
  $if(#isParameterized)
state().trace().addCircularCase2Change(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, 
    _value.value + "->" + new_#(signature)_value);
  $else
state().trace().addCircularCase2Change(this, "#(hostClassName).#(signatureJavaStyle)", "", 
    #(signature)_value + "->" + new_#(signature)_value);
  $endif
 $endif
$endif
]]

AttrDecl.traceHookCircularExitCase2 = [[
$if (TraceCircular)
 $if(#getNTA)
  $if(#isParameterized)
state().trace().addExitCircularNTACase2(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addExitCircularNTACase2(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $else
  $if(#isParameterized)
state().trace().addExitCircularCase2(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addExitCircularCase2(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $endif
$endif
]]

AttrDecl.traceHookCircularExitCase3 = [[
$if (TraceCircular)
 $if(#getNTA)
  $if(#isParameterized)
state().trace().addExitCircularNTACase3(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addExitCircularNTACase3(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $else
  $if(#isParameterized)
state().trace().addExitCircularCase3(this, "#(hostClassName).#(signatureJavaStyle)", _parameters, _value.value);
  $else
state().trace().addExitCircularCase3(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
  $endif
 $endif
$endif
]]

ASTNode.traceHookRewriteEnterCase1 = [[
$if (TraceRewrite)
state().trace().addEnterRewriteCase1(this, "ASTNode.getChild", i, nodeToString(node));
$endif
]]

ASTNode.traceHookRewriteChange = [[
$if (TraceRewrite)
if (this.state().peek() == $ASTNode$$State.REWRITE_CHANGE) {
  state().trace().addRewriteChange(this, "ASTNode.getChild", i,
      nodeToString(oldNode) + "->" + nodeToString(node));
}
$endif
]]

ASTNode.traceHookRewriteCached = [[
$if (TraceRewrite)
state().trace().addCached(this, "ASTNode.getChild", i, nodeToString(node));
$endif
]]

ASTNode.traceHookRewriteCacheAbort = [[
$if (TraceRewrite)
state().trace().addCacheAbort(this, "ASTNode.getChild", i, nodeToString(node));
$endif
]]

ASTNode.traceHookRewriteExitCase1 = [[
$if (TraceRewrite)
state().trace().addExitRewriteCase1(this, "ASTNode.getChild", i, nodeToString(node));
$endif
]]

ASTNode.traceHookRewriteExitCase2 = [[
$if (TraceRewrite)
state().trace().addExitRewriteCase2(this, "ASTNode.getChild", i, nodeToString(node));
$endif
]]

ASTNode.traceHookRewriteExitCase3 = [[
$if (TraceRewrite)
state().trace().addExitRewriteCase3(this, "ASTNode.getChild", i, nodeToString(node));
$endif
]]

ASTDecl.traceHookCopyNode = [[
$if (TraceCopy)
state().trace().addCopy(this, nodeToString(this));
$endif
]]

AttrDecl.traceHookFlushAttr = [[
$if (TraceFlush)
    $if(#isParameterized)
state().trace().addFlushAttr(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_values);
    $else
state().trace().addFlushAttr(this, "#(hostClassName).#(signatureJavaStyle)", "", #(signature)_value);
    $endif
$endif
]]

ASTNode.traceHookFlushRewrite = [[
$if (TraceRewrite)
state().trace().addFlushRewrite(this, "ASTNode.getChild", i, nodeToString(children[i]));
$endif
]]

ASTNode.traceHookFlushRewriteInit = [[
$if (TraceRewrite)
state().trace().addFlushRewriteInit(this, "ASTNode.getChild", i, nodeToString(children[i]));
$endif
]]

