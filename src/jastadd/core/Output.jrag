/* Copyright (c) 2013, Jesper Ã–qvist <jesper.oqvist@cs.lth.se>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Lund University nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

aspect OutputDestination {
  /**
   * If needed create the directory, and parent directories, where the AST
   * classes Java source code is generated.
   */
  public void Grammar.createPackageOutputDirectory() {

    File packageDir = packageDirectory();
    if (!packageDir.isDirectory()) {
      packageDir.mkdirs();
    }
  }

  /**
   * @param typeName the name of the generated type
   * @return the target java file for a generated type
   */
  syn File Grammar.targetJavaFile(String typeName) =
    new File(packageDirectory(), typeName + ".java");

  /**
   * @return The output directory for the AST package.
   */
  syn lazy File Grammar.packageDirectory() {
    String packageName = config().packageName;
    if (packageName.isEmpty()) {
      return outputDirectory();
    } else {
      String packagePath = packageName.replace('.', File.separatorChar);
      return new File(outputDirectory(), packagePath);
    }
  }

  /**
   * @return The base output directory for generated Java code.
   */
  syn lazy File Grammar.outputDirectory() = new File(config().outputDir);
}
