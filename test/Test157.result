
======= Construct AST
## Dependencies/Cache after construction:
======= Access AST
## Dependencies/Cache in current after access
======= Attribute calls
## Dependencies/Cache in current after calls:
dep(A/List[0]/B[0]:decl -> A:getChild)
dep(A/List[0]/B[1]:decl -> A:getChild)
dep(A/List[0]/B[0]:decl -> A/List[0]:getParent)
dep(A/List[0]/B[1]:decl -> A/List[0]:getParent)
dep(A/List[0]/B[0]:decl -> A/List[0]:numChildren)
dep(A/List[0]/B[1]:decl -> A/List[0]:numChildren)
dep(A/List[0]/B[0]:decl -> A/List[0]:getChild)
dep(A/List[0]/B[1]:decl -> A/List[0]:getChild)
dep(A/List[0]/B[0]:decl -> A/List[0]/B[0]:getName)
dep(A/List[0]/B[1]:decl -> A/List[0]/B[0]:getName)
dep(A/List[0]/B[0]:decl -> A/List[0]/B[0]:getUse)
dep(A/List[0]/B[0]:decl -> A/List[0]/B[0]:a)
dep(A/List[0]/B[0]:a -> A/List[0]/B[0]:b)
dep(A/List[0]/B[0]:decl -> A/List[0]/B[0]:getParent)
value(A/List[0]/B[0]:decl, A/List[0]/B[1])
value(A/List[0]/B[0]:a, false)
value(A/List[0]/B[0]:b, false)
dep(A/List[0]/B[0]:decl -> A/List[0]/B[1]:getName)
dep(A/List[0]/B[1]:decl -> A/List[0]/B[1]:getUse)
dep(A/List[0]/B[1]:decl -> A/List[0]/B[1]:a)
dep(A/List[0]/B[1]:a -> A/List[0]/B[1]:b)
dep(A/List[0]/B[1]:decl -> A/List[0]/B[1]:getParent)
value(A/List[0]/B[1]:decl, A/List[0]/B[0])
value(A/List[0]/B[1]:a, false)
value(A/List[0]/B[1]:b, false)
======= Change AST with Insert
## Dependencies/Cache in current after insert:
dep(A/List[0]/B[0]:a -> A/List[0]/B[0]:b)
value(A/List[0]/B[0]:a, false)
value(A/List[0]/B[0]:b, false)
dep(A/List[0]/B[2]:a -> A/List[0]/B[2]:b)
value(A/List[0]/B[2]:a, false)
value(A/List[0]/B[2]:b, false)
======= Second Access
## Dependencies/Cache after second access:
dep(A/List[0]/B[0]:a -> A/List[0]/B[0]:b)
value(A/List[0]/B[0]:a, false)
value(A/List[0]/B[0]:b, false)
dep(A/List[0]/B[2]:a -> A/List[0]/B[2]:b)
value(A/List[0]/B[2]:a, false)
value(A/List[0]/B[2]:b, false)

