## after construction: 
node: a=A  (parent=null)
node: a/child[0]=A/List[0]  (parent=A)
node: a/child[0]/child[0]=A/List[0]/B[0]  (parent=A/List[0])

## after access: 
node: a=A  (parent=null)
node: a/child[0]=A/List[0]  (parent=A)
node: a/child[0]/child[0]=A/List[0]/B[0]  (parent=A/List[0])

## after attribute computation: 
node: a=A  (parent=null)
dep(A/List[0] -> A)
node: a/child[0]=A/List[0]  (parent=A)
dep(A -> A/List[0])
dep(A/List[0]/B[0] -> A/List[0])
node: a/child[0]/child[0]=A/List[0]/B[0]  (parent=A/List[0])
dep(A/List[0] -> A/List[0]/B[0])
value(A/List[0]/B[0]:decl, A/List[0]/C[1])
node: a/child[0]/child[1]=A/List[0]/C[1]  (parent=A/List[0])

