import java.util.*;

aspect Test184 {


  syn lazy B C.decl() = lookupB(getID());

  inh B C.lookupB(String id);

  eq A.getC().lookupB(String id) {
    return parA(id);
  }

  syn nta B A.parA(String id) {
    D d = lookupD(id);
    B b = new B();
    b.setName(id);
    b.setD(d);
    d.name();
    return b;
  }



  inh D A.lookupD(String id);

  eq Root.getA().lookupD(String id) {
    return parRoot(id);
  }

  syn nta D Root.parRoot(String id) {
    D d = new D();
    d.setName(id);
    return d;
  }



  inh String D.name();
  inh String Root.name();

  eq Start.getRoot().name() = "name";

}
