import java.util.*;

aspect Test183 {

  syn lazy final List Root.getDList() = new List();
  syn lazy final List A.getBList() = new List();

  syn lazy B C.decl() = lookupB();
  inh B C.lookupB();

  eq A.getC().lookupB() {
    if (getNumB() == 0)
      addB(createB());
    B b = getB(getNumB()-1);
    b.getD().name();
    return b;
  }

  public B A.createB() {
    D d = lookupD();
    B b = new B();
    b.setD(d);
    return b;
  }

  inh D A.lookupD();

  eq Root.getA().lookupD() {
    if (getNumD() == 0) 
     addD(new D("a"));
    return getD(getNumD()-1);
  }

  inh String D.name();
  eq Root.getD().name() = "name";

}
